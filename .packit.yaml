# See the documentation for more information:
# https://packit.dev/docs/configuration/

specfile_path: journal-to-fedora-messaging-messages.spec
issue_repository: https://github.com/fedora-infra/journal-to-fedora-messaging-messages

# add or remove files that should be synced
files_to_sync:
  - journal-to-fedora-messaging-messages.spec
  - .packit.yaml

# name in upstream package repository/registry (e.g. in PyPI)
upstream_package_name: journal-to-fedora-messaging-messages
# downstream (Fedora) RPM package name
downstream_package_name: journal-to-fedora-messaging-messages
# tag template if not just the version
upstream_tag_template: v{version}

targets:
  - fedora-latest-stable
  - fedora-development
  - epel-9
  - epel-10

actions:
  # post-upstream-clone:
    # fetch specfile from src.fp.o
    # - "curl https://src.fedoraproject.org/rpms/journal-to-fedora-messaging-messages/raw/main/j/journal-to-fedora-messaging-messages.spec -o journal-to-fedora-messaging-messages.spec"
    # - "sh -c 'curl -sSL https://install.python-poetry.org | python3 -'"
    # - "sh -c '$HOME/.local/bin/poetry --version'"
  create-archive:
    # - "sh -c '$HOME/.local/bin/poetry build -f sdist'"
    # - "sh -c 'echo dist/journal_to_fedora_messaging-$($HOME/.local/bin/poetry version -s).tar.gz'"
    - poetry build -f sdist
    - "sh -c 'echo dist/journal_to_fedora_messaging_messages-$(poetry version -s).tar.gz'"
  get-current-version:
    # fetch the version number of the package
    - poetry version -s

jobs:
  # upon upstream PRs, perform COPR builds
  - job: copr_build
    trigger: pull_request

  # upon upstream PRs, test builds
  - job: tests
    trigger: pull_request

  # upon upstream releases, perform COPR builds
  - job: copr_build
    trigger: release

  # upon upstream releases, test builds
  - job: tests
    trigger: release

  # upon downstream changes, create a PR upstream with sync'd files from above
  - job: sync_from_downstream
    trigger: commit

  # land upstream release in fedora dist-git - no builds
  - job: propose_downstream
    trigger: release

  # create an srpm from upstream and submit a scratch build to koji
  - job: upstream_koji_build
    trigger: release

  # downstream automation

  # trigger a build in koji for a new dist-git commit
  - job: koji_build
    trigger: commit

  # create a new update in bodhi for a successful koji build. directly related to `koji_build`
  - job: bodhi_update
    trigger: commit
    dist_git_branches:
      # Don't create an update on Rawhide.
      - fedora-latest-stable
      - epel-9
      - epel-10
